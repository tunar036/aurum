// app/css e elave edilen zamani ../ biri silinecek

// Fonts
@mixin fontface($name,$folder, $file, $weight: normal, $style: normal){
    @font-face {
        font-family: "#{$name}";
        src: url('../../fonts/#{$folder}/#{$file}.otf');
        font-weight: $weight;
        font-style: $style;
    }
}

// font size
@mixin font-size($fs-map) {
    @each $fs-breakpoint, $fs-font-size in $fs-map {    
        @if $fs-breakpoint == null {
            font-size: $fs-font-size;
        }
        @else {
            @media screen and (min-width: $fs-breakpoint) {
                font-size: $fs-font-size;
            }
        }
    }
}
// my fonts
@mixin myfont($font-family, $font-style, $font-weight, $font-size, $line-height, $color){
    font-family: $font-family;
    font-style: $font-style;
    font-weight: $font-weight;
    font-size:  $font-size;
    line-height: $line-height;
    color: $color;
}

//breakpoints
// @mixin breakpoint($point) {
//     @if $point == desktop {
//         @media only screen and (max-width: 1200px) { @content ; }
//     }
//     @else if $point == laptop {
//         @media only screen and (max-width: 992px) { @content ; }
//     }
//     @else if $point == tablet {
//         @media only screen and (min-width: 768px) { @content ; }
//     }
//     @else if $point == phablet {
//         @media (min-width: 576px)  { @content ; }
//     }
//     @else if $point == mobileonly {
//         @media (max-width: 576px)  { @content ; }

//     }
// }

// breakpoints(min)
// @mixin breakpoint($point) {
//     @if $point == bgdesktop {
//         @media only screen and (min-width: 1400px) { @content ; }
//     }
//     @else if $point == desktop {
//         @media only screen and (min-width: 1200px) { @content ; }
//     }
//     @else if $point == laptop {
//         @media only screen and (min-width: 992px) { @content ; }
//     }
//     @else if $point == tablet {
//         @media only screen and (min-width: 768px) { @content ; }
//     }
//     @else if $point == phablet {
//         @media (min-width: 576px)  { @content ; }
//     }
//     @else if $point == mobileonly {
//         @media (max-width: 576px)  { @content ; }

//     }
// }

//breakpoints(max)
@mixin breakpoint($point) {
    @if $point == bgdesktop {
        @media only screen and (max-width: 1400px) { @content ; }
    }
    @else if $point == desktop {
        @media only screen and (max-width: 1200px) { @content ; }
    }
    @else if $point == laptop {
        @media only screen and (max-width: 992px) { @content ; }
    }
    @else if $point == tablet {
        @media only screen and (max-width: 768px) { @content ; }
    }
    @else if $point == phablet {
        @media (max-width: 576px)  { @content ; }
    }
}


//Medium Screen - 768 to 992 screen size
@mixin bg-screen{
    @media only screen and (max-width: 1400px) and (min-width: 1024px) {
        @content;
    }
}

//Medium Screen - 768 to 992 screen size
@mixin md-screen{
    @media only screen and (max-width: 992px) {
        @content;
    }
}

//Medium Screen - 575 to 767 screen size
@mixin sm-screen{
    @media only screen and (max-width: 767px) {
        @content;
    }
}

//Medium Screen - below 575 screen size
@mixin xs-screen{
    @media only screen and (max-width: 575px) {
        @content;
    }
}

//Small Screen - below 475 screen size
@mixin xxs-screen{
    @media only screen and (max-width: 475px) {
        @content;
    }
}

//Small Screen - below 425 screen size
@mixin s-screen{
    @media only screen and (max-width: 425px) {
        @content;
    }
}

@mixin theme($theme) {
    @if $theme == dark {
        @at-root #{selector-nest('body[data-theme=dark]', &)} {
            @content;
        }
    }
    @else if $theme == gold {
        @at-root #{selector-nest('body[data-theme=gold]', &)} {
            @content;
        }
    }

}


// box size
@mixin box ($width, $height, $bg-color) {
    display: block;
    width: $width;
    height: $height;
    background-color: $bg-color;
}
// background img
@mixin cover-background($img-uri, $background-top:"center", $background-left:"center", $background-attachment:"fixed") {
    background: url($img-uri) no-repeat unquote($background-top) unquote($background-left) unquote($background-attachment);
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
}
// svg color change
@mixin svg-color($color) {
    background-image: url('data:image/svg+xml;utf8,<svg ...><g stroke="#{$color}" ... /></g></svg>');
}

// flex box
@mixin flex-box ($justify-content:normal, $align-items:normal){
    display: flex;
    justify-content: $justify-content;
    align-items: $align-items;
}
// grid box
@mixin grid-box ($grid-columns, $grid-flow:dense, $gap){
    display: grid;
    grid-template-columns: $grid-columns;
    grid-auto-flow: $grid-flow;
    grid-gap: $gap;
}
// position
@mixin position ($position,$top, $right, $bottom, $left) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin border ($border, $b-radius){
    border: $border;
    border-radius: $b-radius;
}

// circle
@mixin circle
{
    @include border-radius(100%);
}
//box shadow
@mixin box-shadow( $h: 10px , $v: 10px , $b: 0px , $s: 0px , $c: #000000 ) {
    -webkit-box-shadow: $h $v $b $s $c;
    -moz-box-shadow: $h $v $b $s $c;
    box-shadow: $h $v $b $s $c;
}
// vertical align
@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}
// transition
@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-duration:    $duration;
    -o-transition-duration:      $duration;
    -webkit-transition-duration: $duration;
    transition-duration:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}


@mixin custom-scroll-bar() {
    &::-webkit-scrollbar {
        border-radius: $bradius-md;
        height: 10px;
        width: 8px;
    }

    &::-webkit-scrollbar-thumb {
        background: $silver;
        border-radius: $bradius-md;
    }

    &::-webkit-scrollbar-track {
        border-radius: $bradius-md;
    }
}

// no scroll bar
@mixin no-scroll-bar() {
    &::-webkit-scrollbar {
        height: 0;
        width: 0;
    }

    &::-webkit-scrollbar-thumb {
        height: 0;
        width: 0;
    }

    &::-webkit-scrollbar-track {
        height: 0;
        width: 0;
    }
}
